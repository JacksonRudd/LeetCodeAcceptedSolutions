//https://leetcode.com/problems/regular-expression-matching/


public class Solution {
    public static boolean isMatch(String p, String s) {

    	//if both have length one
    	if(s.length() == 1 && p.length() == 1){
			if(s.charAt(0) == p.charAt(0)||  s.charAt(0)=='.'){
				return true;
			}else{
				return false;
			}
		}
    	//if only s has one left and p doesn't there is not a match 
    	else if(s.length() == 1 ){
    		return false;
    	}
    	//what if p has none left
    	if(p.length() == 0){
    		if(s.length() == 0){
    			return true;
    		}
    		if(s.length() == 1){
    			return false;
    		}
    		if(s.charAt(1)=='*'){
    			return isMatch(p, s.substring(2)  );
    		}
    		return false;
    		
    	}
        //what if s has none left?
    	if(s.length() == 0){
    		return false;
    	}
    	
    	if(s.charAt(1)=='*'){

    		if(s.charAt(0) == p.charAt(0) || s.charAt(0)=='.'){
    			//If the word being with the same letter there are two options
    			// 1. the * is not used, and therefore we decrement s
    			// 2. the * is used, therefore we decrement p
    			boolean starDone = isMatch(p , s.substring(2) );
    			boolean starMatch = isMatch( p.substring(1),s );
    			boolean cont = starDone || starMatch;
    			return  cont;
    		}else{
    			return isMatch( p, s.substring(2)  );
    		}
    		
    	}
    	
    	if(s.charAt(0) == p.charAt(0) || s.charAt(0)=='.'){
    		return isMatch( p.substring(1), s.substring(1) );
    	}
    	return false;
    }

}